version: '3.8'
services:
  postgresql:
    build:
      context: ../infra/docker-compose/postgresql
    image: postgresql-cadastro
    restart: always
    container_name: postgresql-cadastro
    environment:
      POSTGRES_USER: cadastro
      POSTGRES_PASSWORD: cadastro
      POSTGRES_DB: cadastro
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - tap-on-phone
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"

  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  kafka:
    image: confluentinc/cp-kafka
    container_name: cp-kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    deploy:
      resources:
        limits:
          memory: 768mb
          cpus: "0.5"
    networks:
      - tap-on-phone

  redis:
    image: redis:7-alpine
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  cadastro:
    image: service-cadastro:1.0.0
    restart: always
    container_name: service-cadastro
    ports:
      - "8081:8080"
    volumes:
      - maven-repo:/root/.m2
    env_file:
      - ambiente.env
    depends_on:
      - kafka
      - postgresql
      - redis
      - mongo
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  operacao-pagamento:
    image: service-operacao-pagamento:1.0.0
    restart: always
    container_name: service-operacao-pagamento
    ports:
      - "8082:8080"
    volumes:
      - maven-repo:/root/.m2
    env_file:
      - ambiente.env
    depends_on:
      - kafka
      - postgresql
      - redis
      - mongo
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  motor-pagamento:
    image: service-motor-pagamento:1.0.0
    restart: always
    container_name: service-motor-pagamento
    volumes:
      - maven-repo:/root/.m2
    env_file:
      - ambiente.env
    depends_on:
      - kafka
      - postgresql
      - redis
      - mongo
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  pagamento:
    image: service-pagamento:1.0.0
    restart: always
    container_name: service-pagamento
    ports:
      - "8083:8080"
    volumes:
      - maven-repo:/root/.m2
    env_file:
      - ambiente.env
    depends_on:
      - kafka
      - postgresql
      - redis
      - mongo
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

  gateway:
    image: service-gateway:1.0.0
    restart: always
    container_name: service-gateway
    ports:
      - "8080:8080"
    volumes:
      - maven-repo:/root/.m2
    deploy:
      resources:
        limits:
          memory: 384mb
          cpus: "0.25"
    networks:
      - tap-on-phone

volumes:
  postgresql-data:
  maven-repo:
  mongodb-data:

networks:
  tap-on-phone:
